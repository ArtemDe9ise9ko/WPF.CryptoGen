<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:oxy="http://oxyplot.org/wpf">
    <!--Button-->
    <Style x:Key="ConfigButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <TextBlock Text="{TemplateBinding Content}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <TextBlock Text="{TemplateBinding Content}" TextDecorations="Underline" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="CurrencyButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource TextColor}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{DynamicResource LineTableColor}" BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource IsMouseOverCurrencyBottom}"></Setter>
                <Setter Property="Foreground" Value="{DynamicResource TextColor}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ExitButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource TextColor}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--RadioButton-->
    <Style x:Key="NavButton" TargetType="RadioButton">
        <Setter Property="Height" Value="50"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource NavTextColor}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="0,0,0,4"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{DynamicResource NavTextColor}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource IsMouseOverTag}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{DynamicResource IsCheckedTag}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource IsCheckedTag}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--ListBox-->
    <Style x:Key="CustomMetroListBoxItem"
       TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ListBoxIsMouseOver}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="Selector.IsSelectionActive" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource ListBoxIsSelected}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <!--BorderWindow-->
    <Style x:Key="BorderWindow" TargetType="Border">
        <Setter Property="CornerRadius" Value="5"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource ContentBackgroundColor}"></Setter>
        <Setter Property="BorderThickness" Value="0.3"></Setter>
    </Style>
    <Style x:Key="BorderNavWindow" TargetType="Border">
        <Setter Property="CornerRadius" Value="5"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource ContentBackgroundColor}"></Setter>
        <Setter Property="BorderThickness" Value="0.3, 0.3,0,0"></Setter>
    </Style>
    <!--TextBlock-->
    <Style x:Key="menuButtonText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource NavTextColor}"/>
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="20"/>
    </Style>
    <Style x:Key="MyTextBlock" TargetType="TextBlock">
        <Setter Property="FontStyle" Value="Normal"/>
        <Setter Property="FontFamily" Value="Gotham Rounded Book"/>
    </Style>

    <!--Image-->
    <Style TargetType="Image"></Style>
    <!--CurrencyImage-->
    <Style BasedOn="{StaticResource {x:Type Image}}" TargetType="Image" x:Key="CurrencyImage">
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="30" />
    </Style>
    <!--Brushes-->
    <SolidColorBrush x:Key="BrushTextColor" Color="Gray"/>
    <!--Currency-->
    <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="TextBlock" x:Key="Currency">
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <!--CurrencySymbol-->
    <Style BasedOn="{StaticResource Currency}" TargetType="TextBlock" x:Key="CurrencySymbol">
        <Setter Property="Foreground" Value="{DynamicResource BrushTextColor}"/>
        <Setter Property="FontSize" Value="20" />
    </Style>
    <!--CurrencyName-->
    <Style BasedOn="{StaticResource Currency}" TargetType="TextBlock" x:Key="CurrencyName">
        <Setter Property="Foreground" Value="{DynamicResource TextColor}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Margin" Value="5,0" />
    </Style>
    
    <!--Tooltips-->


    <!--ComboBox-->

    <!--Mini progress bar-->

    <!--Scrollbar-->
    


</ResourceDictionary>